[{"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\index.js":"1","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\App.js":"2","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\AddQuote.jsx":"3","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\QuoteDetail.jsx":"4","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\Comments.js":"5","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\NewCommentForm.js":"6","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\layout\\Layout.jsx":"7","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\layout\\MainNavigation.jsx":"8","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\AllQuotes.jsx":"9","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\QuoteList.js":"10","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\QuoteItem.js":"11","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\QuoteForm.js":"12","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\UI\\LoadingSpinner.js":"13","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\UI\\Card.js":"14","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\HighlightedQuote.js":"15","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\NotFound.jsx":"16","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\hooks\\use-http.js":"17","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\lib\\api.js":"18","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\NoQuotesFound.js":"19","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\CommentsList.js":"20","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\CommentItem.js":"21"},{"size":141,"mtime":1642866603643,"results":"22","hashOfConfig":"23"},{"size":932,"mtime":1643041439307,"results":"24","hashOfConfig":"23"},{"size":698,"mtime":1643048675936,"results":"25","hashOfConfig":"23"},{"size":2227,"mtime":1643051515206,"results":"26","hashOfConfig":"23"},{"size":1872,"mtime":1643096329572,"results":"27","hashOfConfig":"23"},{"size":1307,"mtime":1643096072029,"results":"28","hashOfConfig":"23"},{"size":274,"mtime":1642933271490,"results":"29","hashOfConfig":"23"},{"size":710,"mtime":1642963689393,"results":"30","hashOfConfig":"23"},{"size":1322,"mtime":1643050653875,"results":"31","hashOfConfig":"23"},{"size":1920,"mtime":1643047327205,"results":"32","hashOfConfig":"23"},{"size":468,"mtime":1642934455805,"results":"33","hashOfConfig":"23"},{"size":3447,"mtime":1643048225483,"results":"34","hashOfConfig":"23"},{"size":167,"mtime":1642863502395,"results":"35","hashOfConfig":"23"},{"size":156,"mtime":1642863502418,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1642863502586,"results":"37","hashOfConfig":"23"},{"size":409,"mtime":1642938247980,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1643047449594,"results":"39","hashOfConfig":"23"},{"size":2213,"mtime":1643047792095,"results":"40","hashOfConfig":"23"},{"size":331,"mtime":1643050815882,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1642863502492,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1642863502478,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"c8p1vh",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\index.js",[],["92","93"],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\App.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\AddQuote.jsx",["94"],"import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst AddQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/all-quotes\");\r\n    }\r\n  }, [status]);\r\n  const addQuoteHandler = (quoteData) => {\r\n    // console.log(quoteData);\r\n    sendRequest(quoteData);\r\n  };\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default AddQuote;\r\n","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\QuoteDetail.jsx",["95","96"],"import { useEffect } from \"react\";\r\nimport { Route, useParams, useRouteMatch, Link } from \"react-router-dom\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n// import DUMMY_QUOTES from \"../components/quotes/quoteData.json\";\r\n\r\nconst QuoteDetail = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote, // data ko ek alias name de diya he -> loadedQuotes.\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  // useRouteMatch hook gives me the path and url of a component so that I can navigate.\r\n  const match = useRouteMatch();\r\n  console.log(match);\r\n  const { path, url } = match;\r\n\r\n  const { quoteId } = useParams();\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [quoteId]);\r\n\r\n  // const quoteData = DUMMY_QUOTES.find((quote) => quote.id === quoteId);\r\n\r\n  // Loading spinner ke liye -\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // agr error aya -\r\n  if (error) {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const quoteData = loadedQuote;\r\n\r\n  // quote not found --> us quote ka text falsy he.\r\n  if (!quoteData.text) {\r\n    return <h1>No Quote Found.</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={quoteData.text} author={quoteData.author} />\r\n\r\n      {/* Conditional Content Rendering through Routes - */}\r\n      <Route exact path={`${path}`}>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${url}/comments`}>\r\n            Show Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${path}/comments`}>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${url}`}>\r\n            Hide Comments\r\n          </Link>\r\n        </div>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\Comments.js",["97"],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\NewCommentForm.js",["98"],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\layout\\MainNavigation.jsx",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\AllQuotes.jsx",["99"],"import { useEffect } from \"react\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n// import DUMMY_QUOTES from \"../components/quotes/quoteData.json\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes, // data ko ek alias name de diya he -> loadedQuotes.\r\n    error,\r\n  } = useHttp(getAllQuotes,true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, []);\r\n\r\n  // Loading spinner ke liye -\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // agr error aya -\r\n  if (error) {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // firebase se GET request complete to ho gai par usne null ya empty array return kar diya to Not Found component dikhana he.\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  console.log(\"loadedQuotes\", loadedQuotes);\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\QuoteList.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\QuoteItem.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\QuoteForm.js",["100"],"import { useRef, useState } from \"react\";\n\n// Prompt component ki madad se mai user ko warn kar sakta hu jab they are trying to navigate away from the current page.\nimport { useHistory, Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  // state to manage if the form was in focus at some time or not.\n  let [isEntering, setIsEntering] = useState(false);\n\n  // const history = useHistory();\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  async function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n\n    // programmatically redirecting -\n    // could be done using history.push() or history.replace()\n    // push mai wo pages ke stack pe add kardega.\n    // replace mai wo current page ko stack maise replace kardega.\n    // replace mai history.back() karke back ni ja sakte.\n    // history.push(\"/all-quotes\"); --> Took this to AddQuote.js -> useEffect func.\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n    // Closure ki wajah se milegi to abhi bhi purani value hi yaha.\n    console.log(\"inside finish entering handler\", isEntering);\n  };\n\n  // bahar new value milegi.\n  console.log(\"outside finish entering handler\", isEntering);\n\n  return (\n    <>\n      {/* Prompt component takes 2 arguments - */}\n      {/* 1. when - Jab user page chodd ke jaa raha ho aur ye \"when\" wali condition follow ho rahi ho tab prompt dikhana. */}\n      {/* 2. message - a function that returns the prompt message (string) which we want to show. */}\n      <Prompt\n        when={isEntering}\n        message={(location) => \"Are you sure you want to leave?\"}\n        // location parameter stores the data regarding where the user wants to navigate to, leaving the current page.\n      ></Prompt>\n\n      <Card>\n        {/* Ye paat lagane ke liye ki form focus mai he ki ni we can use the onFocus event handler - */}\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              // Pehle btn click pai isEntering false karwa dunga taki submit karne ke baad Prompt na dikhe.\n              // Is prompt wali situation after submission can be handled simply using another state.\n              onClick={finishEnteringHandler}\n              type=\"submit\"\n              className=\"btn\"\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\UI\\LoadingSpinner.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\UI\\Card.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\HighlightedQuote.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\pages\\NotFound.jsx",["101"],"import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history.push(\"/all-quotes\");\r\n    }, 3000);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h1>404 Page Not Found.</h1>\r\n      <p>Redirecting to All Quotes in 3 seconds.</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\hooks\\use-http.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\lib\\api.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\quotes\\NoQuotesFound.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\CommentsList.js",[],"C:\\Users\\mg\\Desktop\\Git\\LearningReact\\React Complete Guide Udemy Max Schwarzmüller\\project3_Router\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":15,"column":6,"nodeType":"108","endLine":15,"endColumn":14,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":21},{"ruleId":"106","severity":1,"message":"114","line":31,"column":6,"nodeType":"108","endLine":31,"endColumn":15,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"114","line":20,"column":6,"nodeType":"108","endLine":20,"endColumn":15,"suggestions":"116"},{"ruleId":"106","severity":1,"message":"117","line":17,"column":6,"nodeType":"108","endLine":17,"endColumn":21,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"114","line":22,"column":6,"nodeType":"108","endLine":22,"endColumn":8,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":10,"column":6,"nodeType":"108","endLine":10,"endColumn":8,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'NoQuotesFound' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.",["125"],["126"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["127"],["128"],"'useHistory' is defined but never used.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [history, status]",{"range":"141","text":"142"},"Update the dependencies array to be: [quoteId, sendRequest]",{"range":"143","text":"144"},{"range":"145","text":"144"},"Update the dependencies array to be: [status, error, props]",{"range":"146","text":"147"},"Update the dependencies array to be: [sendRequest]",{"range":"148","text":"149"},"Update the dependencies array to be: [history]",{"range":"150","text":"151"},[444,452],"[history, status]",[1003,1012],"[quoteId, sendRequest]",[706,715],[475,490],"[status, error, props]",[625,627],"[sendRequest]",[246,248],"[history]"]